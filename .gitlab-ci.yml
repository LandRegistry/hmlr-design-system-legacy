image: hmlandregistry/dev_base_python_flask:5


######## CACHE ########
cache:
  untracked: true
  key: "$CI_PROJECT_NAME-$CI_PIPELINE_ID"

.npm: &npm
  image: hmlandregistry/dev_base_nodejs:1-10
  before_script:
    - source scl_source enable rh-nodejs10
    - npm config set unsafe-perm true # Because docker runners are root
    - npm install
    - npm run installGovukFrontend

######## PIPELINE ########
# Here we define the full pipeline - a list of stages that get executed in order.
stages:
  - install
  - checks
  - package
  - publish


######## JOBS ########
# Now we define the jobs that go into the various stages of the pipeline.
# node_modules:
#   stage: install
#   <<: *npm
#   script:
#     - npm install
#     - npm run installGovukFrontend
#   after_script:
#     - npm ls
#   tags:
#     - docker/hmlandregistry/*

flake8:
  stage: checks
  before_script:
    - pip3 install flake8
  script:
    - flake8
  tags:
    - docker/hmlandregistry/*

js:
  stage: checks
  <<: *npm
  script:
    - npm run lint-js
  tags:
    - docker/hmlandregistry/*

scss:
  stage: checks
  <<: *npm
  script:
    - npm run lint-scss
  tags:
    - docker/hmlandregistry/*

check-tag:
  stage: checks
  only:
    - tags
  script:
    - >
      grep "\"version\": \"${CI_COMMIT_REF_NAME}\"" package.json && echo "Tag matches package.json" || (echo "Specified tag in Git does not match that defined in package.json. Aborting..." && exit 1)
  tags:
    - docker/hmlandregistry/*


build:
  stage: package
  before_script:
    - pip3 install setuptools wheel
  script:
    - python3 setup.py sdist bdist_wheel
  # only:
  #   - tags
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - dist
    expire_in: 5 days
  tags:
    - docker/hmlandregistry/*

publish_python:
  stage: publish
  before_script:
    - pip3 install twine
  only:
    - tags
  script:
    - python3 -m twine upload dist/*
  tags:
    - docker/hmlandregistry/*

publish_node:
  stage: publish
  <<: *npm
  # only:
  #   - tags
  script:
    - npm publish --dry-run
  tags:
    - docker/hmlandregistry/*


# TODO: Separate out requirements that are actually required to install this package, and those that are just for the demo
# TODO: nodejs in pipeline
# TODO: npm package
# TODO: Lock down the github repo and set up mirroring from gitlab
# TODO: Make sure React components accept `to` props for React Router links
# TODO: Cache npm packages
# TODO: Use base image with node already in it
